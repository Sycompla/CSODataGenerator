        public GetListResponse GetList(GetListRequest request)
        {

            GetListResponse response = new GetListResponse();

            try
            {

                response.#classCode#s = new #classCode#Cap().GetList();

                response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.SUCCESS };

            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        }

        public GetByIdResponse GetById(GetByIdRequest request)
        {

            GetByIdResponse response = new GetByIdResponse();

            try
            {

                response.#classCode# = new #classCode#Cap().GetById(request.Id);

                response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.SUCCESS };

            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        } // GetById
/*
        public GetByGuidResponse GetByGuid(GetByGuidRequest request)
        {

            GetByGuidResponse response = new GetByGuidResponse();

            try
            {

                response.#classCode# = new #classCode#Cap().GetByGuid(request.Guid);

                response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.SUCCESS };

            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        } // GetByGuid
*/
        public IsExistByIdResponse IsExistById(IsExistByIdRequest request)
        {
            IsExistByIdResponse response = new IsExistByIdResponse();

            try
            {

                if (new #classCode#Cap().IsExistById(request.Id))
                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.SUCCESS };
                else
                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.INEFFECTIVE };

            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        } // IsExistById
/*
        public IsExistByGuidResponse IsExistByGuid(IsExistByGuidRequest request)
        {

            IsExistByGuidResponse response = new IsExistByGuidResponse();

            try
            {

                if (new #classCode#Cap().IsExistByGuid(request.Guid))
                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.SUCCESS };
                else
                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.INEFFECTIVE };

            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        } // IsExistByGuid
*/
        public UpdateByIdResponse UpdateById(UpdateByIdRequest request)
        {

            UpdateByIdResponse response = new UpdateByIdResponse();

            try
            {
                if (new #classCode#Cap().IsExistById(request.Id)) { 

                    #classCode# response#classCode# = new #classCode#Cap().UpdateById(request.Id, request.#classCode#);

                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.SUCCESS };
		    response.#classCode# = response#classCode#;
                }
                else
                {
                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = "Adott id-val nem létezik rekord." };
                }
            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        } // UpdateById
/*
        public UpdateByGuidResponse UpdateByGuid(UpdateByGuidRequest request)
        {

            UpdateByGuidResponse response = new UpdateByGuidResponse();

            try
            {
                if (new #classCode#Cap().IsExistByGuid(request.Guid)) { 

                    new #classCode#Cap().UpdateByGuid(request.Guid, request.#classCode#);

                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.SUCCESS };
                }
                else
                {
                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = "Adott id-val nem létezik rekord." };
                }

            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        } // UpdateByGuid
*/
        public InsertResponse Insert(InsertRequest request)
        {

            InsertResponse response = new InsertResponse();

            try
            {

                #classCode# response#classCode# = new #classCode#Cap().Insert(request.#classCode#);

                response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.SUCCESS };
		response.#classCode# = response#classCode#;

            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        } // Insert
/*
        public SetByGuidResponse SetByGuid(SetByGuidRequest request)
        {

            SetByGuidResponse response = new SetByGuidResponse();

            try
            {

              IsExistByGuidResponse isExistByGuidResponse =
                  IsExistByGuid(new IsExistByGuidRequest() { Guid = request.Guid } );

              if (isExistByGuidResponse.Result.Success())
              {

                  UpdateByGuidResponse updateByGuidResponse =
                      UpdateByGuid(
                          new UpdateByGuidRequest()
                          {
                              Guid = request.Guid
                              ,
                              #classCode# = request.#classCode#
                          });

                  response.Result = updateByGuidResponse.Result;

              }
              else
              {

                  InsertResponse insertResponse =
                      Insert(
                          new InsertRequest()
                          {
                              #classCode# = request.#classCode#
                          });

                  response.Result = insertResponse.Result;

              }

            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        } // SetByGuid
        */
        public DeleteByIdResponse DeleteById(DeleteByIdRequest request)
        {

            DeleteByIdResponse response = new DeleteByIdResponse();

            try
            {
                if (new #classCode#Cap().IsExistById(request.Id)) { 

                    new #classCode#Cap().DeleteById(request.Id);

                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.SUCCESS };
                }
                else
                {
                    response.Result = new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = "Adott id-val nem létezik rekord." };
                }
            }
            catch (Exception exception)
            {
                response.Result = (new Ac4yProcessResult() { Code = Ac4yProcessResult.FAIL, Message = exception.Message, Description = exception.StackTrace });
            }

            return response;

        } // DeleteById
